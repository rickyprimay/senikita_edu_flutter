import 'package:flutter/material.dart';
import 'package:infinite_scroll_pagination/infinite_scroll_pagination.dart';
import 'package:liquid_pull_to_refresh/liquid_pull_to_refresh.dart';
import 'package:provider/provider.dart';
import 'package:widya/models/course/course_model.dart';
import 'package:widya/res/widgets/colors.dart';
import 'package:widya/res/widgets/fonts.dart';
import 'package:widya/res/widgets/loading.dart';
import 'package:widya/res/widgets/shared_preferences.dart';
import 'package:widya/utils/routes/routes_names.dart';
import 'package:widya/view/home/widget/category_slider_widget.dart';
import 'package:widya/view/home/widget/course_card_widget.dart';
import 'package:widya/viewModel/course_view_model.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {

  final CourseViewModel courseViewModel = CourseViewModel();

  late final PagingController<int, Course> _pagingController = PagingController<int, Course>(
    getNextPageKey: (state) => (state.keys?.last ?? 0 ) + 1,
    fetchPage: (pageKey) => courseViewModel.fetchCoursesForPaging(page: pageKey),
  );

  String? _name;
  String? _photo;

  String? get name => _name;
  String? get photo => _photo;

  Future<void> _loadUserData() async {
    final sp = SharedPrefs.instance;
    final prefs = await sp;
    setState(() {
      _name = prefs.getString("user_name");
      _photo = prefs.getString("user_photo");
    });
  }

  @override
  void initState() {
    super.initState();
    _loadUserData();
  }

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => CourseViewModel()..fetchCourses()),
      ],
      child: Scaffold(
        backgroundColor: const Color(0xFFF5F5F5),
        body: SafeArea(
          top: false,
          child: Column(
            children: [
              Container(
                decoration: BoxDecoration(
                  color: AppColors.primary,
                  borderRadius: const BorderRadius.vertical(bottom: Radius.circular(30)),
                  image: const DecorationImage(
                    image: AssetImage('assets/common/hero-texture.png'),
                    fit: BoxFit.cover,
                  ),
                ),
                padding: const EdgeInsets.all(18),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const SizedBox(height: 20),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        const Icon(Icons.menu, color: Colors.white),
                        Text(
                          'Widya',
                          style: AppFont.crimsonTextTitle.copyWith(
                            color: Colors.white,
                            fontSize: 24,
                          ),
                        ),
                        ClipOval(
                          child: photo != null
                              ? Image.network(
                                  photo!,
                                  width: 50,
                                  height: 50,
                                  fit: BoxFit.cover,
                                  errorBuilder: (context, error, stackTrace) {
                                    return Container(
                                      width: 50,
                                      height: 50,
                                      color: Colors.grey,
                                      child: const Icon(Icons.error, color: Colors.white),
                                    );
                                  },
                                )
                              : Container(
                                  width: 50,
                                  height: 50,
                                  color: Colors.grey,
                                  child: const Icon(Icons.person, color: Colors.white),
                                ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 20),
                    Text(
                      'Halo, $name ðŸ‘‹',
                      style: AppFont.ralewaySubtitle.copyWith(
                        fontSize: 18,
                        color: Colors.white,
                      ),
                    ),
                    const SizedBox(height: 2),
                    Text(
                      'Siapkah kamu untuk melestarikan Kesenian Indonesia? Mari Belajar Seni dan Budaya Nusantara Bersama Ahlinya',
                      style: AppFont.ralewaySubtitle.copyWith(
                        fontSize: 12,
                        color: Colors.white70,
                      ),
                    ),
                    const SizedBox(height: 20),
                    Container(
                      decoration: BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(15),
                        boxShadow: [
                          BoxShadow(
                            color: Colors.black.withAlpha(22),
                            blurRadius: 6,
                            offset: const Offset(0, 3),
                          ),
                        ],
                      ),
                      padding: const EdgeInsets.symmetric(horizontal: 10),
                      child: TextField(
                        style: AppFont.ralewaySubtitle.copyWith(
                          fontSize: 16,
                          color: Colors.black,
                        ),
                        decoration: InputDecoration(
                          hintText: 'Cari Pembelajaran...',
                          hintStyle: AppFont.ralewaySubtitle.copyWith(
                            fontSize: 14,
                            color: Colors.grey,
                          ),
                          border: InputBorder.none,
                          suffixIcon: const Icon(Icons.search, color: Colors.grey),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
              
              const SizedBox(height: 10),
              const CategorySliderWidget(),
              const SizedBox(height: 8),
              
              Expanded(
                child: Consumer<CourseViewModel>(
                  builder: (context, courseViewModel, child) {
                    Future<void> refreshCourses() async {
                      await courseViewModel.fetchCourses();
                    }

                    if (courseViewModel.loading && (courseViewModel.courses == null || courseViewModel.courses!.isEmpty)) {
                      return Loading(opacity: 0.5);
                    }

                    if (courseViewModel.error != null && (courseViewModel.courses == null || courseViewModel.courses!.isEmpty)) {
                      return Center(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              "Error: Gagal Koneksi Ke Server",
                              style: AppFont.ralewaySubtitle.copyWith(fontSize: 16, fontWeight: FontWeight.w500),
                            ),
                            const SizedBox(height: 20),
                            ElevatedButton(
                              onPressed: () => refreshCourses(),
                              style: ElevatedButton.styleFrom(backgroundColor: AppColors.primary),
                              child: Text(
                                'Coba Lagi',
                                style: AppFont.ralewaySubtitle.copyWith(
                                  fontSize: 16,
                                  fontWeight: FontWeight.w500,
                                  color: Colors.white,
                                ),
                              ),
                            ),
                          ],
                        ),
                      );
                    }

                    final courses = courseViewModel.courses;

                    return LiquidPullToRefresh(
                      onRefresh: refreshCourses,
                      showChildOpacityTransition: true,
                      color: AppColors.primary,
                      height: 60,
                      backgroundColor: Colors.white,     
                      animSpeedFactor: 2.0,        
                      child: (courses == null || courses.isEmpty)
                          ? ListView(
                              physics: const AlwaysScrollableScrollPhysics(),
                              children: [
                                SizedBox(
                                  height: MediaQuery.of(context).size.height * 0.5,
                                  child: Center(
                                    child: Text(
                                      "Tidak ada kursus tersedia saat ini.",
                                      style: AppFont.ralewaySubtitle.copyWith(fontSize: 16, fontWeight: FontWeight.w500),
                                    ),
                                  ),
                                ),
                              ],
                            )
                          : PagingListener(
                              controller: _pagingController,
                              builder: (context, state, fetchNextPage) => Padding(
                                padding: const EdgeInsets.all(20), 
                                child: PagedListView<int, Course>(
                                  state: state,
                                  fetchNextPage: fetchNextPage,
                                  builderDelegate: PagedChildBuilderDelegate<Course>(
                                    itemBuilder: (context, item, index) {
                                      return Column(
                                        children: [
                                          CourseCard(
                                            title: item.title,
                                            subtitle: item.description,
                                            duration: item.duration,
                                            icon: Icons.music_note,
                                            author: item.instructor.name,
                                            imageUrl: item.thumbnail,
                                            level: item.level,
                                            onTap: () {
                                              Navigator.of(context, rootNavigator: true).pushNamed(
                                                RouteNames.course,
                                                arguments: {
                                                  'courseId': item.id,
                                                  'instructorName': item.instructor.name,
                                                  'categoryName': item.category.join(', '),
                                                },
                                              );
                                            },
                                          ),
                                          const SizedBox(height: 20),
                                        ],
                                      );
                                    },
                                  ),
                                ),
                              ),
                            ),
                    );
                  },
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
